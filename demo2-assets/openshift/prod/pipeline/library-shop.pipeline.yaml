apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  labels:
    app: library-shop-pipelines
    group: rhacademy
  name: library-shop-pipeline
spec:
  params:
  - description: url of the git repo for the code of deployment
    name: git-url
    type: string
  - default: main
    description: revision to be used from repo of the code for deployment
    name: git-revision
    type: string
  - description: name of the deployment to be patched
    name: deployment-name
    type: string
  - description: image to be build from the code
    name: backend-image
    type: string
  tasks:
  - name: fetch-source
    params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.git-revision)
      - name: sslVerify
        value: "false"
      - name: verbose
        value: "false"
      - name: subdirectory
        value: ""
      - name: deleteExisting
        value: "true"
    taskRef:
      resolver: cluster
      params:
        - name: kind
          value: task
        - name: name
          value: git-clone
        - name: namespace
          value: openshift-pipelines
    workspaces:
      - name: output
        workspace: shared-workspace
  - name: build-image
    params:
      - name: IMAGE
        value: $(params.backend-image)
      - name: DOCKERFILE
        value: ./src/main/docker/Containerfile.jvm
      - name: CONTEXT
        value: .
      - name: TLSVERIFY
        value: "false"
      - name: FORMAT
        value: oci
      - name: BUILD_EXTRA_ARGS
        value: ""
      - name: PUSH_EXTRA_ARGS
        value: ""
      - name: SKIP_PUSH
        value: "false"
    runAfter:
      - maven-build
    taskRef:
      resolver: cluster
      params:
        - name: kind
          value: task
        - name: name
          value: buildah
        - name: namespace
          value: openshift-pipelines
    workspaces:
      - name: source
        workspace: shared-workspace
  - name: apply-manifests
    params:
      - name: SCRIPT
        value: |-
          oc apply --filename ./src/main/openshift/
          oc wait --for=condition=available --timeout=600s deployment/$(params.deployment-name)
          echo "-----------Displaying all the pods-----------"
          oc get pods
      - name: VERSION
        value: latest
    runAfter:
      - build-image
    taskRef:
      resolver: cluster
      params:
        - name: kind
          value: task
        - name: name
          value: openshift-client
        - name: namespace
          value: openshift-pipelines
    workspaces:
      - name: manifest-dir
        workspace: shared-workspace
  - name: maven-build
    params:
      - name: MAVEN_IMAGE
        value: registry.access.redhat.com/ubi9/openjdk-21:1.21
      - name: GOALS
        value:
        - '-DskipTests'
        - package
      - name: CONTEXT_DIR
        value: .
    runAfter:
      - fetch-source
    taskRef:
      resolver: cluster
      params:
        - name: kind
          value: task
        - name: name
          value: maven
        - name: namespace
          value: openshift-pipelines
    workspaces:
      - name: source
        workspace: shared-workspace
      - name: maven-settings
        workspace: shared-workspace
      - name: maven-local-repo
        workspace: shared-workspace
  workspaces:
    - name: shared-workspace